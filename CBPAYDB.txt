      *This is the seventh file in sequence
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CBPAYDB.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      * PAYMENT DETAIL PS DECLARATION
           SELECT TI001-PS ASSIGN TO PAYDET
           ORGANIZATION IS SEQUENTIAL
           ACCESS MODE IS SEQUENTIAL
           FILE STATUS IS WS-FST-TI001.
       DATA DIVISION.
       FILE SECTION.
      * INPUT FILE LAYOUT
       FD TI001-PS
           RECORDING MODE IS F
           RECORD CONTAINS 80 CHARACTERS.
       01 TI001-PS-REC.
           05 TI001-COLLECTION       PIC X(10).
           05 FILLER                 PIC X(01).
           05 TI001-APPLICANT-ID     PIC X(10).
           05 FILLER                 PIC X(01).
           05 TI001-LOAN-ID          PIC X(02).
           05 FILLER                 PIC X(01).
           05 TI001-AMOUNT-PAID      PIC 9(7)V9(2).
           05 FILLER                 PIC X(01).
           05 TI001-AMOUNT-PAID-DATE PIC X(10).
       WORKING-STORAGE SECTION.
       01  WS-VARS.
           05 WS-FST-TI001           PIC 9(02).
               88 TI001-SUCCESS      VALUE ZEROES.
               88 TI001-EOF          VALUE 10.
           05 WS-ERR-MSG.
               10 WS-ERR-LEN         PIC S9(4) USAGE COMP VALUE 800.
               10 WS-ERR-TEXT        PIC X(80) OCCURS 10 TIMES.
           05 WS-LRECL               PIC S9(9) USAGE COMP VALUE 80.
           05 WS-APPLICANT-ID        PIC X(10).
           05 WS-LOAN-ID             PIC X(02).
           EXEC SQL INCLUDE SQLCA END-EXEC.
           EXEC SQL INCLUDE PAYDCL END-EXEC.
           EXEC SQL INCLUDE LOANDCL END-EXEC.
       PROCEDURE DIVISION.
       0000-MAIN-PARA.
           PERFORM 1000-INIT-PARA THRU 1000-INIT-PARA-EXIT
           PERFORM 3000-PROC-PARA THRU 3000-PROC-PARA-EXIT
           PERFORM 9000-TERM-PARA THRU 9000-TERM-PARA-EXIT
           .
       0000-MAIN-PARA-EXIT.
           EXIT.
       1000-INIT-PARA.
           DISPLAY 'INITIALIZATION PARA'.
       1000-INIT-PARA-EXIT.
           EXIT.
       3000-PROC-PARA.
           PERFORM 3100-OPEN-PARA THRU 3100-OPEN-PARA-EXIT
           PERFORM 3300-READ-PARA THRU 3300-READ-PARA-EXIT
                                       UNTIL TI001-EOF
           PERFORM 3900-CLOSE-PARA THRU 3900-CLOSE-PARA-EXIT
           .
       3000-PROC-PARA-EXIT.
           EXIT.
       9000-TERM-PARA.
           STOP RUN.
       9000-TERM-PARA-EXIT.
           EXIT.
       3100-OPEN-PARA.
           OPEN INPUT TI001-PS
           EVALUATE TRUE
           WHEN WS-FST-TI001 = 00
               DISPLAY 'TI001 OPENED'
           WHEN OTHER
               DISPLAY 'TI001 OPEN FAILED ' WS-FST-TI001
               PERFORM 9000-TERM-PARA THRU 9000-TERM-PARA-EXIT
           END-EVALUATE.
       3100-OPEN-PARA-EXIT.
           EXIT.
       3300-READ-PARA.
           READ TI001-PS
           EVALUATE TRUE
           WHEN TI001-SUCCESS
               PERFORM 3400-MOVE-PARA THRU 3400-MOVE-PARA-EXIT
           WHEN TI001-EOF
               DISPLAY 'ALL RECORDS READ'
           WHEN OTHER
               DISPLAY 'TI001 READ FAILED ' WS-FST-TI001
           END-EVALUATE
           .
       3300-READ-PARA-EXIT.
           EXIT.
       3900-CLOSE-PARA.
           CLOSE TI001-PS.
       3900-CLOSE-PARA-EXIT.
           EXIT.
       3400-MOVE-PARA.
      * MOVING VALUES TO HOST VARIABLES
           MOVE TI001-APPLICANT-ID TO WS-APPLICANT-ID
           MOVE TI001-LOAN-ID TO WS-LOAN-ID
           MOVE TI001-AMOUNT-PAID TO HV-AMOUNT-PAID
           MOVE TI001-AMOUNT-PAID-DATE TO HV-AMOUNT-PAID-DATE
           MOVE TI001-COLLECTION TO HV-COLLECTION
      * FETCHING BAL AMOUNT FROM LOAN_DB
           EXEC SQL
           SELECT BALANCE_AMOUNT INTO :HV-BALANCE-AMOUNT
           FROM LOAN_DB
           WHERE APPLICANT_ID = :WS-APPLICANT-ID
           END-EXEC
           EVALUATE TRUE
           WHEN SQLCODE = 000
               PERFORM 3500-INSERT-PARA THRU 3500-INSERT-PARA-EXIT
           WHEN SQLCODE = 100
               DISPLAY 'APPLICANT-ID NOT MATCHED' WS-APPLICANT-ID
           WHEN OTHER
               DISPLAY 'RECORD FETCH FAILED'
               CALL 'DSNTIAR' USING SQLCA WS-ERR-MSG WS-LRECL
               DISPLAY WS-ERR-MSG
           END-EVALUATE
           .
       3400-MOVE-PARA-EXIT.
           EXIT.
       3500-INSERT-PARA.
      * CALCULATING PREVIOUS AND CURRENT BALANCE AMOUNT
           IF HV-BALANCE-AMOUNT > 0
                COMPUTE HV-PREVIOUS-BALANCE-AMOUNT = HV-BALANCE-AMOUNT
                COMPUTE HV-CURRENT-BALANCE-AMOUNT =
                       HV-PREVIOUS-BALANCE-AMOUNT - HV-AMOUNT-PAID
           ELSE
                COMPUTE HV-PREVIOUS-BALANCE-AMOUNT = HV-BALANCE-AMOUNT
                COMPUTE HV-CURRENT-BALANCE-AMOUNT = HV-BALANCE-AMOUNT
           END-IF
      * INSERTING THE VALUES INTO PAYMENT_DB
           EXEC SQL
           INSERT INTO PAYMENT_DB VALUES
           (:WS-APPLICANT-ID
           ,:WS-LOAN-ID
           ,:HV-AMOUNT-PAID
           ,:HV-AMOUNT-PAID-DATE
           ,:HV-PREVIOUS-BALANCE-AMOUNT
           ,:HV-CURRENT-BALANCE-AMOUNT
           ,:HV-COLLECTION)
           END-EXEC
           EVALUATE TRUE
           WHEN SQLCODE = 000
               CONTINUE
           WHEN OTHER
               DISPLAY 'RECORD INSERT FAILED'
               CALL 'DSNTIAR' USING SQLCA WS-ERR-MSG WS-LRECL
               DISPLAY WS-ERR-MSG
           END-EVALUATE
           .
       3500-INSERT-PARA-EXIT.
           EXIT.
